1. Queue Implementations

Being a Collection subtype all methods in the Collection interface are also available in the Queue interface.

Since Queue is an interface you need to instantiate a concrete implementation of the interface in order to use it. You can choose between the following Queue implementations in the Java Collections API:

    java.util.LinkedList
    java.util.PriorityQueue

LinkedList is a pretty standard queue implementation.

PriorityQueue stores its elements internally according to their natural order (if they implement Comparable), or according to a Comparator passed to the PriorityQueue.

There are also Queue implementations in the java.util.concurrent package, but I will leave the concurrency utilities out of this tutorial.

Here are a few examples of how to create a Queue instance:

Queue queueA = new LinkedList(); 
	queue.poll(); 
	queue.offer(); 
Queue queueB = new PriorityQueue(); 
